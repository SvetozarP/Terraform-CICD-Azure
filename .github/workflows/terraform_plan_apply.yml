name: 'Terraform Plan Apply'

on:
  #push:
  #  branches: [ "main" ]
  #pull_request:
  workflow_dispatch:

env:
    ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
    ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
    ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
    ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
    TF_VAR_subscription_id: ${{ secrets.ARM_SUBSCRIPTION_ID }}

jobs:
  terraform_plan:
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4

    # Login to Azure
    - name: Login to Azure
      uses: azure/login@v2
      with:
        creds: ${{ secrets.ARM_CREDENTIALS }}

    # Force unlock the state file (if it is locked)
    - name: Force Unlock Terraform State
      run: terraform force-unlock 920d0141-3f4f-8eae-4e28-da1c7ba87a5c || echo "State already unlocked or no lock present"

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init

    # Generate Terraform plan
    - name: Terraform Plan
      run: terraform plan -out=tfplan -lock=false

    # Save plan to Artefact
    - name: Save Terraform plan artefact
      uses: actions/upload-artifact@v4
      with:
        name: terraform-plan
        path: tfplan

  terraform_apply:
    needs: terraform_plan
    runs-on: ubuntu-latest
        
    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4
        
    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
        
    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init

    # Download terraform plan
    - name: Download Terraform plan artefact
      uses: actions/download-artifact@v4
      with:
        name: terraform-plan

    # Apply the terraform plan
    - name: Apply Terraform Plan
      run: terraform apply -auto-approve tfplan -lock=false
